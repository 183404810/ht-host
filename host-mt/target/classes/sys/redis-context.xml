<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
       xmlns:p="http://www.springframework.org/schema/p"  
       xmlns:tx="http://www.springframework.org/schema/tx"  
       xmlns:context="http://www.springframework.org/schema/context"  
       xsi:schemaLocation="  
      http://www.springframework.org/schema/beans  
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
      http://www.springframework.org/schema/tx  
      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
      http://www.springframework.org/schema/context  
      http://www.springframework.org/schema/context/spring-context-3.0.xsd">  
  
    <!-- scanner redis properties  -->  
    <!-- <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/> -->  
  
    <!--（1）如果你有多个数据源需要通过<context:property-placeholder管理，且不愿意放在一个配置文件里，那么一定要加上ignore-unresolvable=“true"-->  
    <!--（2）注意新版的（具体从哪个版本开始不清楚，有兴趣可以查一下）JedisPoolConfig的property name，不是maxActive而是maxTotal，而且没有maxWait属性，建议看一下Jedis源码。-->  
    <!-- redis连接池 -->  
    <bean id="jedisConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxActive" value="${redis.maxActive}"></property>  
        <property name="maxIdle" value="${redis.maxIdle}"></property>  
        <property name="maxWait" value="${redis.maxWait}"></property>  
        <property name="testOnBorrow" value="${redis.testOnBorrow}"></property>  
    </bean>  
    
    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
		<constructor-arg index="0" ref="jedisConfig" />
		<constructor-arg index="1">
			<list>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.host}" />
					<constructor-arg index="1" value="${redis.port}"
						type="int" />
				</bean>
			</list>
		</constructor-arg>
	</bean>
	
	<!-- Jedis ConnectionFactory 数据库连接配置-->  
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  
	    <property name="hostName" value="${redis.host}" />  
	    <property name="port" value="${redis.port}" />  
	    <property name="password" value="${redis.password}" />  
	    <property name="poolConfig" ref="jedisConfig" />  
	</bean>  
	 
	<bean id="jedisTemplate" class="org.springframework.data.redis.core.RedisTemplate"> 
          <property name="connectionFactory" ref="jedisConnectionFactory"></property> 
          <property name="keySerializer"> 
             	<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/> 
          </property> 
          <property name="valueSerializer"> 
                <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/> 
          </property> 
     </bean>
</beans>  