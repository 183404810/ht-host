1、建立本地库
     在自己电脑上任意一个文件夹，新建一个目录，目录名与在github上所建库的名字相同，这里是Hello。然后右击文件夹，在弹出菜单中选择git bash ，弹出命令行窗口，输入：git init。此时git会在这个文件夹下创建一个隐藏目录，这个目录就是本地库了。，而这个Hello目录，实际上就是你的工作路径。
2、绑定本地库和远程库
     承接第7步（即目前命令行中所显示你的目录为hello），输入命令：
	git remote add origin git@github.com:你的用户名/hello.git
3、开始同步
     1）从远程库上更新本地库数据
     好了，现在你的工作路径－本地库－远程库都串联好了。现在我们就可以同步数据。首先，之前我们建立远程库时貌似建立了一个Readme文件，当时，没建也没关系，但我们要保证本地库和远程库一致，而远程库是最终版本，所以先确保本地库和远程库的文件一样。在工作路径下（即git显示你的hello文件夹下）输入：git pull origin master，如果远程库上有你本地库没有的文件，git会帮你下载下来，否则它显示already update.
      这里的pull和origin好理解，master是什么意思？它是主分支的意思，关于分支我们不讨论，你只要知道一个库可以有多个分支，目前我们只有master一个分支。
      2）将本地新数据提交到远程库
     如果你想将一个New.java文件加入远程库hello
    第一步：将New.java拷到本地hello文件夹下。
    第二步：在命令行的hello路径下输入：
     git add New.java （将本地库知道了这个文件）
    第三步：输入：
     git commit -m "我提交了一个java." （变化提交到了本地库） 这里-m表示提交一个message，后面是message内容，这是必须的。
   第四步：输入：
   git push origin master(变化提交到了远程库）
   OK，搞定。你登录到github网站上你的帐户，会发现多了一个文件
   3)将本地文件的所有修改更新到远程库
   一般情况下，你也不知道自己的文件发生了多少变化，你可以输入git status，会告诉你有哪些变化，然后你输入git commit -a -m "your message“， 把所有变化提交到本地库，继续git push origin master，就更新到远程库了。
注意：一般的变化都不要push，只有最终感觉差不多了，再把文件push上去。